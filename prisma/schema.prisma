generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id        Int                @id @default(autoincrement())
  email     String?            @unique
  phone     String?            @unique
  name      String             @default("Anonymous")
  avatarId  String?
  tokens    Token[]
  chats     Chat[]
  items     Item[]
  favorites FavoritesOnItems[]
}

model Token {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  token  String

  @@unique(fields: [userId, token], name: "userToken")
}

model Item {
  id          Int                @id @default(autoincrement())
  owner       User               @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId     Int
  name        String
  price       String
  description String
  photoId     String
  views       Int                @default(0)
  sold        Boolean            @default(false)
  chats       Chat[]
  userId      Int?
  likes       FavoritesOnItems[]
}

model FavoritesOnItems {
  item   Item @relation(fields: [itemId], references: [id])
  itemId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@id([itemId, userId], name: "id")
}

model Message {
  id       Int     @id @default(autoincrement())
  chat     Chat    @relation(fields: [chatId], references: [id])
  chatId   Int
  toSeller Boolean @default(true)
}

model Chat {
  id         Int       @id @default(autoincrement())
  customer   User      @relation(fields: [customerId], references: [id])
  customerId Int
  item       Item      @relation(fields: [itemId], references: [id])
  itemId     Int
  messages   Message[]
}
